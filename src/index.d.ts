import { ObservableArray } from "@nativescript/core/data/observable-array";
import { Property } from "@nativescript/core/ui/core/view";
import { GridLayout } from "@nativescript/core/ui/layouts/grid-layout";
export declare const listWidthProperty: Property<FilterableListpicker, string>;
export declare const listHeightProperty: Property<FilterableListpicker, string>;
export declare const headingTitleProperty: Property<FilterableListpicker, string>;
export declare const enableSearchProperty: Property<FilterableListpicker, boolean>;
export declare const showCancelProperty: Property<FilterableListpicker, boolean>;
export declare const dimmerColorProperty: Property<FilterableListpicker, string>;
export declare const blurProperty: Property<FilterableListpicker, string>;
export declare const focusOnShowProperty: Property<FilterableListpicker, boolean>;
export declare const hideFilterProperty: Property<FilterableListpicker, boolean>;
export declare const hintTextProperty: Property<FilterableListpicker, string>;
export declare const sourceProperty: Property<FilterableListpicker, ObservableArray<any>>;
export declare class FilterableListpicker extends GridLayout {
    constructor();
    onLoaded(): void;
    static canceledEvent: string;
    static itemTappedEvent: string;
    source: any;
    dimmerColor: any;
    hintText: any;
    hideFilter: any;
    enableSearch: boolean;
    blur: any;
    private blurView;
    focusOnShow: any;
    private _container;
    private _picker;
    private _textField;
    private _searchFilter;
    private _isAutocomplete;
    private _suggestions;
    visibility: any;
    loadedContainer(args: any): void;
    loadedInnerContainer(args: any): void;
    autocomplete(fn: Function): void;
    loadedTextField(args: any): void;
    choose(args: any): void;
    cancel(): void;
    hide(): Promise<void>;
    show(): void;
    isAutocomplete: boolean;
    private _searchFilterFn;
}
